Create CukesPlus project structure.



* Process the regex intelligently by applying any method types to the snippets.



* Set system property "com.replicanet.cukesplus.server.featureEditor" to start the web based feature file editor.
* Add a system property option to produce a HTML report file, in the target directory, of known feature files from the command line arguments.
	Then start ACEServer with that file.
	The report file would contains URLs in the form: demo/autocompletion.html?filename=t1.feature
	This would allow editing of files known to the framework


* Added ACEServerCallback to create the file list html page after a file is saved.


* Added feature file line highlighting based on previous run test results.
 	target/report*.json files are scanned for any matching URIs to feature files being viewed in the ACEServer



* Add appropriate ACEServerCallback.beforeGet() callback responses to URLs with extensions ".run.file", ".run.suite" and ".clear.results"
	Will need to check the run requests are synchronously executed with suitable command line parameters.



* Handle Examples table in "test.feature" so the relevant line in the table is highlighted with the test result



* Remove any duplicate report line states



* Report Scenario Outline examples table results as well as the scenario result



* Fixed escaped regex "\(" and "\)" sequences



* When running a file or a suite an external test framework process is started.



* Added syntax hints with and without the keyword to improve hint matching choices.